// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "ewallet-server-v2/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// SourceOfFundsUsecase is an autogenerated mock type for the SourceOfFundsUsecase type
type SourceOfFundsUsecase struct {
	mock.Mock
}

// GetOneById provides a mock function with given fields: ctx, sourceId
func (_m *SourceOfFundsUsecase) GetOneById(ctx context.Context, sourceId int64) (*model.SourceOfFund, error) {
	ret := _m.Called(ctx, sourceId)

	var r0 *model.SourceOfFund
	if rf, ok := ret.Get(0).(func(context.Context, int64) *model.SourceOfFund); ok {
		r0 = rf(ctx, sourceId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.SourceOfFund)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, sourceId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSourceOfFundsUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewSourceOfFundsUsecase creates a new instance of SourceOfFundsUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSourceOfFundsUsecase(t mockConstructorTestingTNewSourceOfFundsUsecase) *SourceOfFundsUsecase {
	mock := &SourceOfFundsUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
